import java.util.Arrays;
import java.util.Scanner;

/**
 * @ClassName SmallK
 * @Desc TODO
 * @Auther 28893
 * @Date 2019/11/13  20:29
 * @Veresion 1.0
 */
public class SmallK {
    //输出一行数里最小的K个数
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        while(sc.hasNext()){
            String s=sc.nextLine();
            String[] arr=s.split(" ");
            int[] result=new int[arr.length-1];
            for(int i=0;i<arr.length-1;i++){
                result[i]=Integer.parseInt(arr[i]);
            }
            int k=Integer.parseInt(arr[arr.length-1]);
           sort(result);
           for(int i=0;i<k;i++){
               System.out.print(result[i]+" ");
           }
        }
    }
    private static void sort(int[] result) {
        quickSort(result,0,result.length-1);
    }
    private static void quickSort(int[] result, int left, int right) {
        if(left<right){
            int pivoindex=partion(result,left,right);
            quickSort(result,left,pivoindex-1);
            quickSort(result,pivoindex+1,right);
        }
    }
    private static int partion(int[] result, int left, int right) {
        int i=left;
        int j=right;
        int pivot=result[left];
        while(i<j){
            while((i<j)&&(result[j]>=pivot)){
                j--;
            }
            while((i<j)&&(result[i]<=pivot)){
                i++;
            }
            swap(result,i,j);
        }
        swap(result,i,left);
        return i;
    }

    private static void swap(int[] result, int i, int j) {
        int temp=result[i];
        result[i]=result[j];
        result[j]=temp;
    }
}
