public class Test1116 {
    //求一个数字变为斐波那契数经过的最小步数
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        System.out.println(minStep(n));
    }
    private static int minStep(int n) {
        int f1=1;
        int f2=1;
        int f3=1;
        while(true){
            if(f3==n){
                return 0;
            }
            f3=f1+f2;
            f1=f2;
            f2=f3;
            if((f1<n)&&(f3>n)){
                return Math.min((n-f1),(f3-n));
            }
        }
    }
    //机器人走方格
    public int countWays(int x, int y) {
        // write code here
        if((x==1)||(y==1)){
            return 1;
        }
        return countWays(x-1,y)+countWays(x,y-1);
    }
}
